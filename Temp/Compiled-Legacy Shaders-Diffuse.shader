// Compiled shader for Windows, Mac, Linux

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Legacy Shaders/Diffuse" {
Properties {
 _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _MainTex ("Base (RGB)", 2D) = "white" { }
}
SubShader { 
 LOD 200
 Tags { "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //        d3d11: 27 avg math (16..49)
 // Stats for Fragment shader:
 //        d3d11: 29 avg math (18..52), 3 avg texture (2..6), 2 avg branch (2..4)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: DIRECTIONAL
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 18 math, 2 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: eq r0.w, cb2[0].x, l(1.000000)
   3: if_nz r0.w
   4:   eq r0.w, cb2[0].y, l(1.000000)
   5:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
   6:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
   7:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
   8:   add r1.xyz, r1.xyzx, cb2[4].xyzx
   9:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  10:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  11:   mul r1.yzw, r1.xxyz, cb2[5].xxyz
  12:   mad r0.w, r1.y, l(0.250000), l(0.750000)
  13:   mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
  14:   max r1.x, r0.w, r1.y
  15:   sample r1.xyzw, r1.xzwx, t1.xyzw, s0
  16: else 
  17:   mov r1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  18: endif 
  19: dp4_sat r0.w, r1.xyzw, cb1[46].xyzw
  20: mul r1.xyz, r0.wwww, cb0[2].xyzx
  21: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  22: max r0.w, r0.w, l(0.000000)
  23: mul r0.xyz, r0.xyzx, r1.xyzx
  24: mul o0.xyz, r0.wwww, r0.xyzx
  25: mov o0.w, l(1.000000)
  26: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul r0.xyz, r0.wwww, r0.xyzx
  16: mov o2.xyz, r0.xyzx
  17: mul r1.x, r0.y, r0.y
  18: mad r1.x, r0.x, r0.x, -r1.x
  19: mul r2.xyzw, r0.yzzx, r0.xyzz
  20: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  21: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  22: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  23: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  24: mov r0.w, l(1.000000)
  25: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  26: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  27: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  28: add r0.xyz, r1.xyzx, r2.xyzx
  29: max o4.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  30: mov o5.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 19 math, 2 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: eq r0.w, cb2[0].x, l(1.000000)
   3: if_nz r0.w
   4:   eq r0.w, cb2[0].y, l(1.000000)
   5:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
   6:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
   7:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
   8:   add r1.xyz, r1.xyzx, cb2[4].xyzx
   9:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  10:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  11:   mul r1.yzw, r1.xxyz, cb2[5].xxyz
  12:   mad r0.w, r1.y, l(0.250000), l(0.750000)
  13:   mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
  14:   max r1.x, r0.w, r1.y
  15:   sample r1.xyzw, r1.xzwx, t1.xyzw, s0
  16: else 
  17:   mov r1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  18: endif 
  19: dp4_sat r0.w, r1.xyzw, cb1[46].xyzw
  20: mul r1.xyz, r0.wwww, cb0[2].xyzx
  21: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  22: max r0.w, r0.w, l(0.000000)
  23: mul r1.xyz, r0.xyzx, r1.xyzx
  24: mul r0.xyz, r0.xyzx, v4.xyzx
  25: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  26: mov o0.w, l(1.000000)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 19 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mul r0.y, r0.y, cb1[5].x
  18: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  19: mov o4.zw, r0.zzzw
  20: add o4.xy, r1.zzzz, r1.xwxx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 29 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xy w
// TEXCOORD                 6   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r1.xyz, -v3.xyzx, cb1[4].xyzx
   3: mov r2.x, cb4[9].z
   4: mov r2.y, cb4[10].z
   5: mov r2.z, cb4[11].z
   6: dp3 r0.w, r1.xyzx, r2.xyzx
   7: add r1.xyz, v3.xyzx, -cb3[25].xyzx
   8: dp3 r1.x, r1.xyzx, r1.xyzx
   9: sqrt r1.x, r1.x
  10: add r1.x, -r0.w, r1.x
  11: mad r0.w, cb3[25].w, r1.x, r0.w
  12: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  13: eq r1.x, cb5[0].x, l(1.000000)
  14: if_nz r1.x
  15:   eq r1.x, cb5[0].y, l(1.000000)
  16:   mul r1.yzw, v3.yyyy, cb5[2].xxyz
  17:   mad r1.yzw, cb5[1].xxyz, v3.xxxx, r1.yyzw
  18:   mad r1.yzw, cb5[3].xxyz, v3.zzzz, r1.yyzw
  19:   add r1.yzw, r1.yyzw, cb5[4].xxyz
  20:   movc r1.xyz, r1.xxxx, r1.yzwy, v3.xyzx
  21:   add r1.xyz, r1.xyzx, -cb5[6].xyzx
  22:   mul r1.yzw, r1.xxyz, cb5[5].xxyz
  23:   mad r1.y, r1.y, l(0.250000), l(0.750000)
  24:   mad r2.x, cb5[0].z, l(0.500000), l(0.750000)
  25:   max r1.x, r1.y, r2.x
  26:   sample r1.xyzw, r1.xzwx, t2.xyzw, s0
  27: else 
  28:   mov r1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r1.x, r1.xyzw, cb2[46].xyzw
  31: div r1.yz, v4.xxyx, v4.wwww
  32: sample r2.xyzw, r1.yzyy, t1.xyzw, s1
  33: add r1.x, r1.x, -r2.x
  34: mad r0.w, r0.w, r1.x, r2.x
  35: mul r1.xyz, r0.wwww, cb0[2].xyzx
  36: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  37: max r0.w, r0.w, l(0.000000)
  38: mul r0.xyz, r0.xyzx, r1.xyzx
  39: mul o0.xyz, r0.wwww, r0.xyzx
  40: mov o0.w, l(1.000000)
  41: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r1.x, v2.xyzx, cb3[4].xyzx
  12: dp3 r1.y, v2.xyzx, cb3[5].xyzx
  13: dp3 r1.z, v2.xyzx, cb3[6].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul r1.xyz, r1.wwww, r1.xyzx
  17: mov o2.xyz, r1.xyzx
  18: mul r1.w, r1.y, r1.y
  19: mad r1.w, r1.x, r1.x, -r1.w
  20: mul r2.xyzw, r1.yzzx, r1.xyzz
  21: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  22: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  23: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  24: mad o4.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  25: mul r0.y, r0.y, cb1[5].x
  26: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  27: mov o5.zw, r0.zzzw
  28: add o5.xy, r1.zzzz, r1.xwxx
  29: mov o6.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 52 math, 6 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r1.xyz, -v3.xyzx, cb1[4].xyzx
   3: mov r2.x, cb4[9].z
   4: mov r2.y, cb4[10].z
   5: mov r2.z, cb4[11].z
   6: dp3 r0.w, r1.xyzx, r2.xyzx
   7: add r1.xyz, v3.xyzx, -cb3[25].xyzx
   8: dp3 r1.x, r1.xyzx, r1.xyzx
   9: sqrt r1.x, r1.x
  10: add r1.x, -r0.w, r1.x
  11: mad r0.w, cb3[25].w, r1.x, r0.w
  12: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  13: eq r1.x, cb5[0].x, l(1.000000)
  14: if_nz r1.x
  15:   eq r1.y, cb5[0].y, l(1.000000)
  16:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  17:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  18:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  19:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  20:   movc r1.yzw, r1.yyyy, r2.xxyz, v3.xxyz
  21:   add r1.yzw, r1.yyzw, -cb5[6].xxyz
  22:   mul r2.yzw, r1.yyzw, cb5[5].xxyz
  23:   mad r1.y, r2.y, l(0.250000), l(0.750000)
  24:   mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
  25:   max r2.x, r1.z, r1.y
  26:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  27: else 
  28:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r1.y, r2.xyzw, cb2[46].xyzw
  31: div r1.zw, v5.xxxy, v5.wwww
  32: sample r2.xyzw, r1.zwzz, t1.xyzw, s1
  33: add r1.y, r1.y, -r2.x
  34: mad r0.w, r0.w, r1.y, r2.x
  35: mul r1.yzw, r0.wwww, cb0[2].xxyz
  36: if_nz r1.x
  37:   eq r0.w, cb5[0].y, l(1.000000)
  38:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  39:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  40:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  41:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  42:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  43:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  44:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  45:   mul r0.w, r2.y, l(0.250000)
  46:   mul r1.x, cb5[0].z, l(0.500000)
  47:   mad r2.y, -cb5[0].z, l(0.500000), l(0.250000)
  48:   max r0.w, r0.w, r1.x
  49:   min r2.x, r2.y, r0.w
  50:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  51:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  52:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  53:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  54:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  55:   mov r5.xyz, v2.xyzx
  56:   mov r5.w, l(1.000000)
  57:   dp4 r3.x, r3.xyzw, r5.xyzw
  58:   dp4 r3.y, r4.xyzw, r5.xyzw
  59:   dp4 r3.z, r2.xyzw, r5.xyzw
  60: else 
  61:   mov r2.xyz, v2.xyzx
  62:   mov r2.w, l(1.000000)
  63:   dp4 r3.x, cb2[39].xyzw, r2.xyzw
  64:   dp4 r3.y, cb2[40].xyzw, r2.xyzw
  65:   dp4 r3.z, cb2[41].xyzw, r2.xyzw
  66: endif 
  67: add r2.xyz, r3.xyzx, v4.xyzx
  68: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  70: max r0.w, r0.w, l(0.000000)
  71: mul r1.xyz, r0.xyzx, r1.yzwy
  72: mul r0.xyz, r0.xyzx, r2.xyzx
  73: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  74: mov o0.w, l(1.000000)
  75: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 49 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mov o3.xyz, r0.xyzx
  18: mul r0.w, r1.y, r1.y
  19: mad r0.w, r1.x, r1.x, -r0.w
  20: mul r2.xyzw, r1.yzzx, r1.xyzz
  21: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  22: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  23: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  24: mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
  25: mov r1.w, l(1.000000)
  26: dp4 r3.x, cb1[39].xyzw, r1.xyzw
  27: dp4 r3.y, cb1[40].xyzw, r1.xyzw
  28: dp4 r3.z, cb1[41].xyzw, r1.xyzw
  29: add r2.xyz, r2.xyzx, r3.xyzx
  30: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r3.xyzw, -r0.yyyy, cb1[4].xyzw
  32: mul r4.xyzw, r1.yyyy, r3.xyzw
  33: mul r3.xyzw, r3.xyzw, r3.xyzw
  34: add r5.xyzw, -r0.xxxx, cb1[3].xyzw
  35: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  36: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  37: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  38: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  39: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  40: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  41: rsq r3.xyzw, r0.xyzw
  42: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  43: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  44: mul r1.xyzw, r1.xyzw, r3.xyzw
  45: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  46: mul r0.xyzw, r0.xyzw, r1.xyzw
  47: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  48: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  49: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  50: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  51: add o4.xyz, r2.xyzx, r0.xyzx
  52: mov o5.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 19 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mul r0.y, r0.y, cb1[5].x
  18: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  19: mov o4.zw, r0.zzzw
  20: add o4.xy, r1.zzzz, r1.xwxx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 48 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  12: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  13: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mul r2.xyz, r0.wwww, r2.xyzx
  17: mov o2.xyz, r2.xyzx
  18: mov o3.xyz, r0.xyzx
  19: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  20: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  21: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  22: mul r5.xyzw, r2.yyyy, r4.xyzw
  23: mul r4.xyzw, r4.xyzw, r4.xyzw
  24: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  25: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  26: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  27: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  28: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  29: rsq r4.xyzw, r0.xyzw
  30: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  31: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  32: mul r3.xyzw, r3.xyzw, r4.xyzw
  33: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: mul r0.xyzw, r0.xyzw, r3.xyzw
  35: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  36: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  37: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  38: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  39: mul r0.w, r2.y, r2.y
  40: mad r0.w, r2.x, r2.x, -r0.w
  41: mul r2.xyzw, r2.yzzx, r2.xyzz
  42: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  43: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  44: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  45: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  46: add o4.xyz, r0.xyzx, r2.xyzx
  47: mul r0.x, r1.y, cb1[5].x
  48: mul r0.w, r0.x, l(0.500000)
  49: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  50: mov o5.zw, r1.zzzw
  51: add o5.xy, r0.zzzz, r0.xwxx
  52: mov o6.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 20 avg math (16..21)
 // Stats for Fragment shader:
 //        d3d11: 26 avg math (18..34), 3 avg texture (2..4), 2 branch
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" }
  ZWrite Off
  Blend One One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: POINT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  18: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  19: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  20: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 28 math, 4 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Color at 128
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   5: mul r1.xyz, r1.xyzx, cb0[8].xyzx
   6: mul r2.xyz, v3.yyyy, cb0[5].xyzx
   7: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
   8: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
   9: add r2.xyz, r2.xyzx, cb0[7].xyzx
  10: eq r0.w, cb2[0].x, l(1.000000)
  11: if_nz r0.w
  12:   eq r0.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r0.w, r1.w
  23:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  28: dp3 r1.w, r2.xyzx, r2.xyzx
  29: sample r2.xyzw, r1.wwww, t1.xyzw, s1
  30: mul r0.w, r0.w, r2.x
  31: mul r2.xyz, r0.wwww, cb0[2].xyzx
  32: dp3 r0.x, v2.xyzx, r0.xyzx
  33: max r0.x, r0.x, l(0.000000)
  34: mul r0.yzw, r1.xxyz, r2.xxyz
  35: mul o0.xyz, r0.xxxx, r0.yzwy
  36: mov o0.w, l(1.000000)
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 18 math, 2 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: eq r0.w, cb2[0].x, l(1.000000)
   3: if_nz r0.w
   4:   eq r0.w, cb2[0].y, l(1.000000)
   5:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
   6:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
   7:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
   8:   add r1.xyz, r1.xyzx, cb2[4].xyzx
   9:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  10:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  11:   mul r1.yzw, r1.xxyz, cb2[5].xxyz
  12:   mad r0.w, r1.y, l(0.250000), l(0.750000)
  13:   mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
  14:   max r1.x, r0.w, r1.y
  15:   sample r1.xyzw, r1.xzwx, t1.xyzw, s0
  16: else 
  17:   mov r1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  18: endif 
  19: dp4_sat r0.w, r1.xyzw, cb1[46].xyzw
  20: mul r1.xyz, r0.wwww, cb0[2].xyzx
  21: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  22: max r0.w, r0.w, l(0.000000)
  23: mul r0.xyz, r0.xyzx, r1.xyzx
  24: mul o0.xyz, r0.wwww, r0.xyzx
  25: mov o0.w, l(1.000000)
  26: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: SPOT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  18: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  19: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  20: mad o4.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 34 math, 4 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Color at 128
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r1.xyz, r1.xyzx, cb0[8].xyzx
   6: mul r2.xyzw, v3.yyyy, cb0[5].xyzw
   7: mad r2.xyzw, cb0[4].xyzw, v3.xxxx, r2.xyzw
   8: mad r2.xyzw, cb0[6].xyzw, v3.zzzz, r2.xyzw
   9: add r2.xyzw, r2.xyzw, cb0[7].xyzw
  10: eq r0.w, cb2[0].x, l(1.000000)
  11: if_nz r0.w
  12:   eq r0.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r0.w, r1.w
  23:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  28: lt r1.w, l(0.000000), r2.z
  29: and r1.w, r1.w, l(0x3f800000)
  30: div r3.xy, r2.xyxx, r2.wwww
  31: add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  32: sample r3.xyzw, r3.xyxx, t1.xyzw, s1
  33: mul r1.w, r1.w, r3.w
  34: dp3 r2.x, r2.xyzx, r2.xyzx
  35: sample r2.xyzw, r2.xxxx, t2.xyzw, s2
  36: mul r1.w, r1.w, r2.x
  37: mul r0.w, r0.w, r1.w
  38: mul r2.xyz, r0.wwww, cb0[2].xyzx
  39: dp3 r0.x, v2.xyzx, r0.xyzx
  40: max r0.x, r0.x, l(0.000000)
  41: mul r0.yzw, r1.xxyz, r2.xxyz
  42: mul o0.xyz, r0.xxxx, r0.yzwy
  43: mov o0.w, l(1.000000)
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: POINT_COOKIE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  18: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  19: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  20: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 29 math, 4 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Color at 128
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r1.xyz, r1.xyzx, cb0[8].xyzx
   6: mul r2.xyz, v3.yyyy, cb0[5].xyzx
   7: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
   8: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
   9: add r2.xyz, r2.xyzx, cb0[7].xyzx
  10: eq r0.w, cb2[0].x, l(1.000000)
  11: if_nz r0.w
  12:   eq r0.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r0.w, r1.w
  23:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  28: dp3 r1.w, r2.xyzx, r2.xyzx
  29: sample r3.xyzw, r1.wwww, t1.xyzw, s2
  30: sample r2.xyzw, r2.xyzx, t2.xyzw, s1
  31: mul r1.w, r2.w, r3.x
  32: mul r0.w, r0.w, r1.w
  33: mul r2.xyz, r0.wwww, cb0[2].xyzx
  34: dp3 r0.x, v2.xyzx, r0.xyzx
  35: max r0.x, r0.x, l(0.000000)
  36: mul r0.yzw, r1.xxyz, r2.xxyz
  37: mul o0.xyz, r0.xxxx, r0.yzwy
  38: mov o0.w, l(1.000000)
  39: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL_COOKIE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o1.zw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
   9: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  10: mul r0.xy, r1.yyyy, cb0[5].xyxx
  11: mad r0.xy, cb0[4].xyxx, r1.xxxx, r0.xyxx
  12: mad r0.xy, cb0[6].xyxx, r1.zzzz, r0.xyxx
  13: mad o1.zw, cb0[7].xxxy, r1.wwww, r0.xxxy
  14: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  15: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r0.xyzx
  21: mov o4.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 23 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Color at 128
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[8].xyzx
   2: mul r1.xy, v3.yyyy, cb0[5].xyxx
   3: mad r1.xy, cb0[4].xyxx, v3.xxxx, r1.xyxx
   4: mad r1.xy, cb0[6].xyxx, v3.zzzz, r1.xyxx
   5: add r1.xy, r1.xyxx, cb0[7].xyxx
   6: eq r0.w, cb2[0].x, l(1.000000)
   7: if_nz r0.w
   8:   eq r0.w, cb2[0].y, l(1.000000)
   9:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
  10:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
  11:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
  12:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  13:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  14:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  15:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  16:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  17:   mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
  18:   max r2.x, r0.w, r1.z
  19:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  20: else 
  21:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  24: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  25: mul r0.w, r0.w, r1.w
  26: mul r1.xyz, r0.wwww, cb0[2].xyzx
  27: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  28: max r0.w, r0.w, l(0.000000)
  29: mul r0.xyz, r0.xyzx, r1.xyzx
  30: mul o0.xyz, r0.wwww, r0.xyzx
  31: mov o0.w, l(1.000000)
  32: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 22 avg math (16..28)
 // Stats for Fragment shader:
 //        d3d11: 2 avg math (2..4), 1 texture
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mul o0.xyz, r0.xyzx, cb0[4].xyzx
   2: mov o0.w, l(1.000000)
   3: mov o1.xyzw, l(0,0,0,0)
   4: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mov o2.w, l(1.000000)
   6: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   7: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul r0.xyz, r0.wwww, r0.xyzx
  16: mov o2.xyz, r0.xyzx
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r1.x, r0.y, r0.y
  19: mad r1.x, r0.x, r0.x, -r1.x
  20: mul r2.xyzw, r0.yzzx, r0.xyzz
  21: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  22: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  23: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  24: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  25: mov r0.w, l(1.000000)
  26: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  27: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  28: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  29: add r0.xyz, r1.xyzx, r2.xyzx
  30: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 4 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: mov o0.xyz, r0.xyzx
   3: mul r0.xyz, r0.xyzx, v5.xyzx
   4: exp o3.xyz, -r0.xyzx
   5: mov o0.w, l(1.000000)
   6: mov o1.xyzw, l(0,0,0,0)
   7: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   8: mov o2.w, l(1.000000)
   9: mov o3.w, l(1.000000)
  10: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mul o0.xyz, r0.xyzx, cb0[4].xyzx
   2: mov o0.w, l(1.000000)
   3: mov o1.xyzw, l(0,0,0,0)
   4: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mov o2.w, l(1.000000)
   6: mov o3.xyzw, l(0,0,0,1.000000)
   7: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul r0.xyz, r0.wwww, r0.xyzx
  16: mov o2.xyz, r0.xyzx
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r1.x, r0.y, r0.y
  19: mad r1.x, r0.x, r0.x, -r1.x
  20: mul r2.xyzw, r0.yzzx, r0.xyzz
  21: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  22: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  23: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  24: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  25: mov r0.w, l(1.000000)
  26: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  27: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  28: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  29: add r0.xyz, r1.xyzx, r2.xyzx
  30: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 3 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: mov o0.xyz, r0.xyzx
   3: mul o3.xyz, r0.xyzx, v5.xyzx
   4: mov o0.w, l(1.000000)
   5: mov o1.xyzw, l(0,0,0,0)
   6: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   7: mov o2.w, l(1.000000)
   8: mov o3.w, l(1.000000)
   9: ret 
// Approximately 0 instruction slots used


 }
}
Fallback "Legacy Shaders/VertexLit"
}